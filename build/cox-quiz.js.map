{"version":3,"file":"cox-quiz.js","sources":["../src/cox-quiz.ts"],"sourcesContent":["import { LitElement, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\nimport { when } from \"lit/directives/when.js\";\nclass QuizForm {\n  name: String;\n  answers: Array<String>;\n  constructor(_name: String, _answers: Array<String>) {\n    this.name = _name;\n    this.answers = _answers;\n  }\n}\n/**\n * An example element.\n *\n * @slot - This element has a slot\n * @csspart button - The button\n */\n\n@customElement(\"cox-quiz\")\nexport class CoxQuiz extends LitElement {\n  static styles = css`\n    h3 {\n      text-align: center;\n    }\n    ul {\n      list-style-type: none;\n    }\n    .quiz-container {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n    .answer__list {\n      display: flex;\n      flex-wrap: wrap;\n      max-width: 400px;\n    }\n    .answer__list-item {\n      flex: 1 0 100px;\n    }\n  `;\n  @property({ type: QuizForm })\n  question = {\n    name: \"What color is the dog ???\",\n    answers: [\"blue\", \"black\", \"red\", \"yellow\"],\n  };\n  @property({ type: String })\n  correctAnswer = \"black\";\n\n  private isPassed = false;\n  private isSelected = false;\n\n  render() {\n    if (typeof this.question === \"string\") {\n      const convert = JSON.parse(this.question);\n      this.question = convert;\n    }\n    return html`\n      ${when(\n        this.isPassed,\n        () => html`\n          <div\n            style=\"display: flex; flex-direction: column; align-items:center\"\n          >\n            <h1 style=\"text-align: center\">Passed</h1>\n            <button style=\"max-width: 50px\" @click=\"${this.resetQuiz}\">\n              Reset\n            </button>\n          </div>\n        `,\n        () => {\n          return html`\n            <div class=\"quiz-container\">\n              <h3>${this.question.name}</h3>\n              <ul class=\"answer__list\">\n                ${this.question.answers.map((answer, answerIndex) => {\n                  return html`\n                    <li class=\"answer__list-item\">\n                      <div class=\"item__checkbox\">\n                        <input\n                          ?disabled=${this.isSelected}\n                          @input=${this.onSelected}\n                          id=\"${answer}\"\n                          name=\"${this.question}\"\n                          type=\"radio\"\n                          value=\"${answer}\"\n                        />\n                        <label for=\"${answer}\"\n                          >${this.numberToAlphabet(\n                            answerIndex + 1\n                          )}.${answer}</label\n                        >\n                      </div>\n                    </li>\n                  `;\n                })}\n              </ul>\n              <h1>${this.message}</h1>\n              <button\n                ?hidden=${!this.isSelected}\n                style=\"max-width: 50px\"\n                @click=\"${this.resetQuiz}\"\n              >\n                Reset\n              </button>\n            </div>\n          `;\n        }\n      )}\n    `;\n  }\n\n  private numberToAlphabet(number: number) {\n    if (Number.isInteger(number) && number > 0) {\n      return String.fromCharCode(number + 64);\n    } else {\n      return \"Invalid input. Please provide a positive integer.\";\n    }\n  }\n\n  private message = \"\";\n  private onSelected(e: Event) {\n    e.preventDefault();\n    const input = e.target as HTMLInputElement;\n    const isCorrect = this.correctAnswer === input.value;\n    if (isCorrect) {\n      this.isPassed = !this.isPassed;\n      this.isSelected = !this.isSelected;\n      this.requestUpdate();\n    } else {\n      this.message = \"Your answer is incorrect\";\n      this.isSelected = !this.isSelected;\n      this.requestUpdate();\n    }\n  }\n  private resetQuiz() {\n    this.isPassed = false;\n    this.isSelected = false;\n    this.message = \"\";\n    this.requestUpdate();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cox-quiz\": CoxQuiz;\n  }\n}\n"],"names":["CoxQuiz","LitElement","constructor","super","arguments","this","question","name","answers","correctAnswer","isPassed","isSelected","message","convert","JSON","parse","html","when","resetQuiz","map","answer","answerIndex","onSelected","numberToAlphabet","number","Number","isInteger","String","fromCharCode","e","preventDefault","input","target","value","requestUpdate","styles","css","__decorateClass","property","type","_name","_answers","prototype","customElement"],"mappings":";;;;;;;;AAmBa,IAAAA,IAAN,cAAsBC,EAAAA;AAAAA,EAAtB,cAAAC;AAAAC,UAAAC,GAAAA,SAAAA,GAuBMC,KAAAC,WAAA,EACTC,MAAM,6BACNC,SAAS,CAAC,QAAQ,SAAS,OAAO,QAAA,EAAA,GAGpBH,KAAAI,gBAAA,SAEhBJ,KAAQK,eACRL,KAAQM,aAAa,IAsErBN,KAAQO,UAAU;AAAA,EAAA;AAAA,EApElB,SACM;AAAA,QAAOP,OAAAA,KAAKC,YAAa,UAAU;AACrC,YAAMO,IAAUC,KAAKC,MAAMV,KAAKC,QAChCD;AAAAA,WAAKC,WAAWO;AAAAA,IAClB;AACO,WAAAG;AAAAA,QACHC,EACAZ,KAAKK,UACL,MAAMM;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,sDAKwCX,KAAKa,SAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WAKnD,MACSF;AAAAA;AAAAA,oBAEGX,KAAKC,SAASC,IAAAA;AAAAA;AAAAA,kBAEhBF,KAAKC,SAASE,QAAQW,IAAI,CAACC,GAAQC,MAC5BL;AAAAA;AAAAA;AAAAA;AAAAA,sCAIaX,KAAKM,UAAAA;AAAAA,mCACRN,KAAKiB,UAAAA;AAAAA,gCACRF,CAAAA;AAAAA,kCACEf,KAAKC,QAAAA;AAAAA;AAAAA,mCAEJc,CAAAA;AAAAA;AAAAA,sCAEGA,CAAAA;AAAAA,6BACTf,KAAKkB,iBACNF,IAAc,CACXD,CAAAA,IAAAA,CAAAA;AAAAA;AAAAA;AAAAA;AAAAA;;oBAOXf,KAAKO,OAAAA;AAAAA;AAAAA,2BAEEP,KAAKM,UAAAA;AAAAA;AAAAA,0BAENN,KAAKa,SAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;;EAS7B;AAAA,EAEQ,iBAAiBM,GACvB;AAAA,WAAIC,OAAOC,UAAUF,CAAWA,KAAAA,IAAS,IAChCG,OAAOC,aAAaJ,IAAS,MAE7B;AAAA,EAEX;AAAA,EAGQ,WAAWK,GACjBA;AAAAA,IAAAA,EAAEC,eACF;AAAA,UAAMC,IAAQF,EAAEG;AACE3B,SAAKI,kBAAkBsB,EAAME,SAExC5B,KAAAK,YAAYL,KAAKK,UACjBL,KAAAM,aAAAA,CAAcN,KAAKM,YACxBN,KAAK6B,cAAAA,MAEL7B,KAAKO,UAAU,4BACVP,KAAAM,aAAcN,CAAAA,KAAKM,YACxBN,KAAK6B;EAET;AAAA,EACQ,YACN7B;AAAAA,SAAKK,WAAW,IAChBL,KAAKM,aAAAA,IACLN,KAAKO,UAAU,IACfP,KAAK6B,cAAAA;AAAAA,EACP;AAzHWlC;AAAAA,EACJmC,SAASC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,KAsBhBC,EAAA,CADCC,EAAS,EAAEC,MAtCd;EAGE,YAAYC,GAAeC,GAAAA;AACzBpC,SAAKE,OAAOiC,GACZnC,KAAKG,UAAUiC;AAAAA,EACjB;AAUWzC,EAAAA,CAAAA,CAAAA,GAAAA,EAuBX0C,WAAA,YAAA,IAKAL,EAAA,CADCC,EAAS,EAAEC,MAAMZ,OA3BP3B,CAAAA,CAAAA,GAAAA,EA4BX0C,WAAA,iBAAA,IA5BW1C,IAANqC,EAAA,CADNM,EAAc,cACF3C;"}